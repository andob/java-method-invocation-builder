apply plugin: 'java'

project.ext.tags = ['clean-code']
group = 'se.bjurr.jmib'
description = 'Generates builders for invoking methods on instantiated objects'


buildscript {
 repositories {
  maven { url "https://jitpack.io" }
 }
 dependencies {
  classpath 'com.github.tomasbjerre:gradle-scripts:master-SNAPSHOT'
 }
}
apply from: project.buildscript.classLoader.getResource('java.gradle').toURI()
apply from: project.buildscript.classLoader.getResource('changelog.gradle').toURI()
apply from: project.buildscript.classLoader.getResource('release.gradle').toURI()


dependencies {
 compile 'com.google.guava:guava:16.0.1'
 compile 'com.squareup:javapoet:1.7.0'
 compile 'se.bjurr.jmib:java-method-invocation-builder-annotations:1.4'

 testCompile 'junit:junit:4.12'
 testCompile 'org.assertj:assertj-core:2.3.0'
 testCompile 'org.mockito:mockito-all:1.8.5'
}

jar {
  from 'src/jar/resources'
}

sourceSets {
 main.java.srcDirs = ['src/main/java' ]
 test.java.srcDirs = ['src/test/java'
                     ,'src/test/generated' ]
}

googleJavaFormat {
  exclude 'src/test/generated/*'
  exclude 'src/test/expected/*'
}

compileJava.doFirst {
 File generatedDir = file("${rootDir}/src/test/generated")
 if (generatedDir.exists()) {
  delete generatedDir
 }
 generatedDir.mkdirs()
}

clean.doFirst {
 File generatedDir = file("${rootDir}/src/test/generated")
 if (generatedDir.exists()) {
  delete generatedDir
 }
 generatedDir.mkdirs()
}
